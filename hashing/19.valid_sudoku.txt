Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:

A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.

================================================================================================================================================================================
function isValidSudoku(A) {
  // refere the below video
  // https://www.youtube.com/watch?v=iI2SNs-Eqeg
  let board = A;
  const rowcase = [];
  for (let i = 0; i < 9; i++) {
    const innerArray = new Array(9).fill(0);
    rowcase.push(innerArray);
  }
  const colcase = [];
  for (let i = 0; i < 9; i++) {
    const innerArray = new Array(9).fill(0);
    colcase.push(innerArray);
  }

  const gridcase = [];
  for (let i = 0; i < 9; i++) {
    const innerArray = new Array(9).fill(0);
    gridcase.push(innerArray);
  }

  for (let i = 0; i < board.length; i++) {
    for (let j = 0; j < board[0].length; j++) {
      // If it is a number.
      if (board[i][j] !== ".") {
        const number = parseInt(board[i][j]);

        const k = Math.floor(i / 3) * 3 + Math.floor(j / 3);
        // k denotes grid number
        rowcase[i][number - 1]++;
        colcase[j][number - 1]++;

        gridcase[k][number - 1]++;

        //break;
        // Check for the 3 cases.
        if (
          rowcase[i][number - 1] > 1 ||
          colcase[j][number - 1] > 1 ||
          gridcase[k][number - 1] > 1
        ) {
          return 0;
        }
      }
    }
    break;
  }

  return 1;
}

let A1 = [
  "53..7....",
  "6..195...",
  ".98....6.",
  "8...6...3",
  "4..8.3..1",
  "7...2...6",
  ".6....28.",
  "...419..5",
  "....8..79",
]; // valid

let A = [
  "53..7....",
  "6..195...",
  ".98....6.",
  "8...6...3",
  "4..8.3..1",
  "7...2...6",
  ".6....28.",
  "...419..5",
  "....8..71",
]; //invalid

let ans1 = isValidSudoku(A1);
let ans = isValidSudoku(A);
console.log(ans1);
console.log(ans);


=======================================================================================