Problem Description:

Given an array A of N integers.
Find the length of the longest subarray in the array which sums to zero.

If there is no subarray which sums to zero then return 0.

Problem Constraints
1 <= N <= 10^5
-109 <= A[i] <= 10^9


Input Format:
Single argument which is an integer array A.

Output Format:
Return an integer.

Example Input:
Input 1:
 A = [1, -2, 1, 2]
Input 2:
 A = [3, 2, -1]

Example Output
Output 1:
3
Output 2:
0

Example Explanation:
Explanation 1:
 [1, -2, 1] is the largest subarray which sums up to 0.
Explanation 2:
 No subarray sums up to 0.

 =================================================================================================================================================================================

let A = [6, 3, -1, -3, 4, -2, 2, 4, 6, -12, -7];
const mpp = new Map();
let maxi = 0;
let sum = 0;
//https://www.youtube.com/watch?v=xmguZ6GbatA&t=659s
// see striver video - best explained and this code is also his only
for (let i = 0; i < A.length; i++) {
  sum += Number(A[i]);
  if (sum === 0) {
    maxi = i + 1;
    // let subarray = A.slice(0, maxi);
    // console.log(subarray);
  } else {
    if (mpp.has(sum)) {
      maxi = Math.max(maxi, i - mpp.get(sum));
      //   let subarray = A.slice(i, mpp.get(sum));
      //   console.log(subarray);
    } else {
      mpp.set(sum, i);
    }
  }
}

console.log(maxi);

