Problem Description:

Misha likes finding all Subarrays of an Array. Now she gives you an array A of N elements and told you to find the number of subarrays of A, that have unique elements.
Since the number of subarrays could be large, return value % 109 +7.

Problem Constraints:
1 <= N <= 105
1 <= A[i] <= 106

Input Format:
The only argument given is an Array A, having N integers.

Output Format:
Return the number of subarrays of A, that have unique elements.

Example Input:
Input 1:
 A = [1, 1, 3]
Input 2:
 A = [2, 1, 2]


Example Output
Output 1:
 4
Output 1:
 5

Example Explanation
Explanation 1:
 Subarrays of A that have unique elements only:
 [1], [1], [1, 3], [3]
Explanation 2:
 Subarrays of A that have unique elements only:
 [2], [1], [2, 1], [1, 2], [2]

 ==============================================================================================================================================================================

function solve(A) {
  // video solution best explained.
  //find the number of subarrays of A, that have unique elements.
  let S = new Set();
  let count = 0;
  let left = 0;
  let right = 0;

  while (right < A.length) {
    if (S.has(A[right])) {
      S.delete(A[left]);
      left++;
    } else {
      S.add(A[right]);
      count += right - left + 1;
      right++;
    }
  }

  return count % 1000000007;
}
A = [2, 1, 2];
let ans = solve(A);
console.log(ans);


    ========================================================================================================================================================================